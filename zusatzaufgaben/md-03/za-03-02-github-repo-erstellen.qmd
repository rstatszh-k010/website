---
title: "Mit OGD Daten arbeiten"
execute:
  echo: false
---


In dieser Zusatzaufgabe geht es darum einen Datensatz selbst zu identifizieren und zu bearbeiten. Für die Daten nutzen wir den OGD (Open Government Data - offene Behördendaten) Datenkatalog des Statistischen Amts des Kantons Zürich. Das Repository wird von euch selbst auf GitHub erstellt und wir bereiten den Datenimport vor, ein Thema womit wir uns in Modul 4 intensiver beschäftigen.

## Schritt 1: Daten herunterladen

1. Öffne: <https://www.zh.ch/de/politik-staat/statistik-daten/datenkatalog.html#/>

2. Unter der Eingabemaske "Thema auswählen" klicke die Auswahl "Daten". Dies wird nur Datensätze welche als CSV of XLSX abgelegt sind anzeigen. 

![](images/01-ogd-katalog.png){width=80%}

3. Durchsuche nun den Katalog, entweder nach einem Thema in den du auf "Thema auswählen" klickst oder nach einem bestimmten Suchkriterium im Suchfeld "Suchen". 

4. Klicke auf einen Datensatz der dich interessiert um weitere Informationen zu erhalten. Stelle sicher, dass der Datensatz als CSV verfügbar ist.

![](images/02-ogd-daten.png){width=80%}

5. Lade die CSV Datei herunter und speicher diese an einem von dir gewählten Ort auf deinem Arbeitsgerät.

![](images/03-ogd-daten-download.png){width=80%}

6. Öffne die Daten [**NICHT** mit MS Excel]{.highlight-yellow}. Dies kann zu Problemen führen, da Excel die Daten automatisch formatiert und somit die Daten verfälscht.

## Schritt 2: Erstelle ein neues Repository auf GitHub & clone es in die Posit Cloud

1. Öffne die GitHub Organisation für den Kurs <https://github.com/rstatszh-k010>
2. Rechts neben dem Feld ["Find a repository"]{.highlight-yellow} klicke auf den grünen ["New"]{.highlight-yellow} Button.

![](images/04-oeffne-github-org.png){width=80%} 

3. Im Feld ["Repository name"]{.highlight-yellow} schreibe `ogd-daten-USERNAME`. [Ersetze USERNAME durch deinen GitHub Benutzernamen]{.highlight-yellow}. Vermeide Leerzeichen.

![](images/05-ogd-username.png){width=80%} 

4. Skrolle auf der gleichen Seite nach unten und klicke auf ["Create repository"]{.highlight-yellow}.

![](images/06-create-repository.png){width=80%} 

5. Im Feld ["Quick setup"]{.highlight-yellow} klicke auf das Clipboard neben der HTTPs URL.

![](images/07-quick-setup.png){width=80%} 

6. Öffne den rstatszh-k010 Arbeitsbereich (Workspace) auf Posit Cloud: [posit.cloud/spaces/591694/content/](https://posit.cloud/spaces/591694/content/)

7. Klicke auf "New Project" > "New Project from Git Repository"

8. Füge die HTTPS-URL von GitHub in das Feld "URL of your Git Repository" ein. [**Beachte:**]{.highlight-yellow} Stelle sicher, dass die Box unter Packages ein Häkchen gesetzt hat.

9. Warte, bis das Projekt bereitgestellt wurde.

## Schritt 3: Lade die Daten in das Projekt auf Posit Cloud

1. Im Datei Manager im Fenster unten rechts, klicke auf "Folder" um einen neuen Ordner zu erstellen.

![](images/08-neuer-ordner.png){width=80%} 

2. Benenne den Ordner "daten".

![](images/09-name-ordner.png){width=80%} 

3. Klicke auf den Ordner "daten" im Datei Manager im Fenster unten rechts.

![](images/10-klick-daten.png){width=80%} 

4. Innerhalb des Ordners "daten", klicke auf "Upload" um die CSV Datei hochzuladen.

![](images/11-klick-upload.png){width=80%} 

5. Im Dialogfenster unter "File to upload:" klicke auf "Choose file" und navigiere zu der CSV Datei aus Schritt 1. Klicke auf OK.

![](images/12-datei-auswaehlen.png){width=80%}

6. Schaue im Fenster unten rechts nach, ob die Datei erfolgreich hochgeladen wurde.

7. Mache einen Commit für alle Dateien indem du im Git Fenster oben rechts neben allen Dateien das Kontrollkästchen anwählst und dann auf "Commit" klickst. Verwende die Commit-Nachricht "Projekt aufsetzen".

![](images/13-git-dateien-hinzufuegen.png){width=80%}

## Schritt 4: Erstelle eine Quarto Datei für die Datenimportierung

In deinem ogd-daten-USERNAME Projekt in RStudio auf Posit Cloud, gehe in der Menüleiste zu [File > New File > Quarto document] um ein Quarto Dokument mit HTML Output zu erstellen. Render das Dokument, welches dich nach einem Namen fragt - du kannst `ogd-daten-analyse.qmd` verwenden und die Datei im Stammordner speichern.

![](images/14-speicher-quarto.png){width=80%}

1. Füge einen Titel und deinen Namen als Autor in die YAML Metadaten am Anfang des Dokuments ein.

2. Lösche den Text und Code-Blöcke unterhalb der YAML Metadaten.

3. Füge eine Sektion formatiert als Heading 2 und Titel: "R Pakete laden" hinzu.

![](images/15-pakete-laden.png){width=80%}

4. Unterhalb der Sektion füge einen Code-Block hinzu.

5. Innerhalb des Code-Blocks, lade die R-Pakete: `readr`, `dplyr`, `ggplot2`.

6. Unterhalb des Code-Blocks, füge eine weitere Sektion formatiert als Heading 2 und Titel: "Daten importieren" hinzu.

7. Unterhalb der Sektion füge einen Code-Block hinzu.

![](images/16-daten-importieren.png){width=80%}

8. Mache einen Commit für alle Dateien und verwende die Commit-Nachricht "Quarto Dokument für Datenimport erstellen".

![](images/17-git-dateien-hinzufuegen.png){width=80%}

## Schritt 5: Übertrage deine Änderungen auf GitHub

1. Navigiere zum Git-Bereich im Fenster oben rechts und stelle sicher, dass dieses leer ist. Sollte es leer sein, dann überspringe 2. bis 5. und mache bei Unterschritt 6. weiter.

2. Aktiviere die Kontrollkästchen neben allen Dateien, um sie für den Commit vorzubereiten.

3. Klicke auf die Schaltfläche "Commit".

4. Gib eine Commit-Nachricht in das Feld "Commit Message" ein (z.B. ODG Daten Modul 3 abgeschlossen).

5. Klicke auf die Schaltfläche "Commit". Das Fenster, welches sich daraufhin öffnet kann geschlossen werden.

::: callout-note
## Hinweis: Git configuration aus Zusatzaufgabe von Modul 1
Es ist möglich, dass Git dich erneut darauf hinweist, dass es nicht weiss, wer du bist. Diese Einstellung haben wir in Modul 1 zwar gemacht, jedoch habe ich in der Vergangenheit beobachtet, dass es bei einigen Teilnehmer:innen erneut zu dieser Meldung kommt. In diesem Fall musst du erneut folgenden Schritt ausführen, um deinen Namen und deine E-Mail-Adresse zu konfigurieren. 

```{r}
#| eval: false
library(usethis)
use_git_config(user.name = "Dein Name", user.email = "Deine Email")
```
:::

6. Klicke auf die Schaltfläche "Push".

7. Gib deinen GitHub-Benutzernamen im Feld Username an. 

8. Gib [deinen GitHub Personal Access Token (PAT)]{.highlight-yellow} im Feld ["Password"]{.highlight-yellow} ein.

9. Das Fenster kann geschlossen werden.

::: callout-important
## Verwende nicht dein GitHub-Passwort

Du musst GitHub Personal Access Token (PAT) eingeben, den du in der Vorbereitung auf den Kurs erstellt hast um deine Änderungen zurück an GitHub zu übertragen.
:::

## Schritt 6: Eröffne ein Issue auf GitHub

1. Öffne [github.com](https://github.com/) in deinem Browser.

2. Navigiere zur GitHub-Organisation für den Kurs: [github.com/rstatszh-k010](https://github.com/rstatszh-k010)

3. Finde das Repository [ogd-daten-USERNAME]{.highlight-yellow}, das mit deinem GitHub-Benutzernamen endet.

4. Klicke auf die Schaltfläche "Issues".

5. Klicke auf die grüne Schaltfläche "New issue".

6. Schreibe in das Feld "Title": "Zusatzaufgaben abgeschlossen".

7. Markiere im Feld "Leave a comment" den Kursleiter mit @larnsce und hinterlasse eine Nachricht oder offene Frage.

