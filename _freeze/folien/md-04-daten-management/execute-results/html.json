{
  "hash": "11acbcf33bcf36f2678e84d161e8023d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"{{< var md-04.titel >}}\"\nsubtitle: \"{{< var course.long-titel >}}\"\nauthor: \"Lars Schöbitz\"\ndate: \"2025-03-18\"\ndate-format: \"MMM D, YYYY\"\nformat: \n  revealjs: \n    theme: slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\nfooter: \"[{{< fa link >}} {{< var course.site-short >}}]({{< var course.site >}})\"\neditor: source\nexecute:\n  freeze: auto\nparams:\n    modul: 4\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Lernziele (für diese Woche)\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n1. Die Lernenden können Daten aus Dateien im CSV und XLSX-Format importieren, die sich in Unterverzeichnissen des Stammverzeichnisses, und auf GitHub, befinden.\n2. Die Lernenden können den Unterschied zwischen drei Arten von Daten erörten: (1) unverarbeitete Rohdaten; (2) verarbeitete, analysefähige Daten, und (3) Daten, die einer Veröffentlichung zugrunde liegen.\n3. Die Lernenden können die Anwendung der Git Befehle clone, commit, push beschreiben.\n4. Die Lernenden können die Begriffe local und remote Repository unterscheiden.\n:::\n\n\n\n# Git Befehle {background-color=\"#4C326A\"}\n\n## \n\n![](img/md-04/git-clone-push-00.drawio.png)\n\n## \n\n![](img/md-04/git-clone-push-01.drawio.png)\n\n## \n\n![](img/md-04/git-clone-push-02.drawio.png)\n\n## \n\n![](img/md-04/git.drawio-00.png)\n\n## \n\n![](img/md-04/git.drawio-01.png)\n\n## \n\n![](img/md-04/git.drawio-02.png)\n\n## \n\n![](img/md-04/git.drawio-03.png)\n\n## \n\n![](img/md-04/git.drawio-04.png)\n\n## \n\n![](img/md-04/git.drawio-05.png)\n\n## \n\n![](img/md-04/git.drawio-06.png)\n\n## \n\n![](img/md-04/git.drawio-07.png)\n\n## \n\n![](img/md-04/git.drawio-08.png)\n\n## \n\n![](img/md-04/git.drawio-09.png)\n\n## \n\n![](img/md-04/git-clone-push-02.drawio.png)\n\n## \n\n![](img/md-04/git-clone-push-03.drawio.png)\n\n## \n\n![](img/md-04/git-clone-push-04.drawio.png)\n\n# Faktoren in R {background-color=\"#4C326A\"}\n\n## Variablen Typen {.smaller}\n\n:::::: incremental\n::::: columns\n::: {.column width=\"50%\"}\n### Numerisch\n\n**Diskrete Variablen**\n\n-   nicht negative\n-   zählbare\n-   ganze Zahlen\n-   z.B. Anzahl Schüler, Würfelwurf\n\n**Stetige (kontinuierliche) Variablen**\n\n-   unendliche Anzahl von Werten\n-   zwischen zwei Werten\n-   auch Datums/Uhrzeitwerte\n-   z.B. Länge, Gewicht, Grösse\n:::\n\n::: {.column width=\"50%\"}\n### Nicht numerisch\n\n**Kategoriale Variablen**\n\n-   endliche Anzahl von Werten\n-   eindeutige Gruppen (z.B. EU Länder)\n-   [ordinal]{.highlight-yellow}, wenn diese eine logische Reihenfolge/Rangordnung aufweisen (z.B. Wochentage)\n:::\n:::::\n::::::\n\n## ordinal skalierte Daten in R {.smaller}\n\n:::::: incremental\n::::: columns\n::: {.column width=\"50%\"}\n\n- ordinal skalierte Daten sind kategoriale Daten, die eine logische Reihenfolge aufweisen\n- in R werden Text-Daten standardmässig als `character` gespeichert\n- Beurteilungen: sehr gut, gut, mittel, schlecht, sehr schlecht\n- die Reihenfolge von Text Daten ist aplhabetisch\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n    arrange(beurteilung) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  name    beurteilung  \n  <chr>   <chr>        \n1 Bob     gut          \n2 Charlie mittel       \n3 Diana   schlecht     \n4 Alice   sehr gut     \n5 Eve     sehr schlecht\n```\n\n\n:::\n:::\n\n\n\n:::\n:::::\n::::::\n\n\n## ordinal skalierte Daten in R {.smaller}\n\n- in R können wir ordinal skalierte Daten mit dem `factor` Datentyp speichern\n- die Level geben die Reihenfolge der Kategorien an\n- die Umwandlung beeinflusst das Verhalten der Daten in Tabellen und Diagrammen\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2|6|8\"}\n# Faktor Level werden in einem Vektor definiert\nbeurteilung_level <- c(\"sehr schlecht\", \"schlecht\", \"mittel\", \"gut\", \"sehr gut\")\n\ndf |> \n    # Die Spalte wird in einen Faktor umgewandelt\n    mutate(beurteilung = factor(beurteilung, levels = beurteilung_level)) |>\n    # Die Tabelle wird nach der Reihenfolge sortiert\n    arrange(beurteilung)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  name    beurteilung  \n  <chr>   <fct>        \n1 Eve     sehr schlecht\n2 Diana   schlecht     \n3 Charlie mittel       \n4 Bob     gut          \n5 Alice   sehr gut     \n```\n\n\n:::\n:::\n\n\n\n\n## Ich bin dran: Faktoren in R\n\n<br><br>\n\n::: {.hand-purple-large style=\"text-align: center;\"}\nZurücklehnen und genießen!\n:::\n\n## Pause machen\n\n[Bitte steh auf und beweg dich.]{.highlight-yellow} Lasst eure E-Mails in Frieden ruhen.\n\n![](img/md-04/pixel-art-tree.png){width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_abdc9bf8\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n::: footer\nBild erzeugt mit [DALL-E 3 by OpenAI](https://openai.com/blog/dall-e/)\n:::\n\n## Ihr seid dran: 02-faktoren-ihr.qmd\n\n::: task\n1.  Öffne [posit.cloud](https://posit.cloud) in deinem Browser (verwende dein Lesezeichen).\n2.  Öffne den rstatszh-k010 Arbeitsbereich (Workspace) für den Kurs.\n3.  Klicke auf [Start]{.highlight-yellow} neben [md-04-uebungen]{.highlight-yellow}.\n4.  Suche im Dateimanager im Fenster unten rechts die Datei [`02-faktoren-ihr.qmd`]{.highlight-yellow} und klicke darauf, um sie im Fenster oben links zu öffnen.\n5.  Folge den Anweisungen in der Datei.\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_48101afb\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">25</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# Daten einlesen {background-color=\"#4C326A\"}\n\n## Rechteckige Daten in R einlesen\n\n::::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/md-04/readr.png){width=80%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/md-04/readr.png){width=80%}\n:::\n:::\n\n\n:::\n:::::\n\n## CSV & XLSX {.smaller}\n\n::::: columns\n::: {.column width=\"50%\"}\n### readr\n\n-   `read_csv()` - durch Kommas getrennte Werte\n-   `read_csv2()` - durch Semicolon getrennte Werte ([Tipp für das Konvertieren von xlsx als csv](https://github.com/openZH/ogd-handbook/blob/main/publikationsleitlinien/xls-zu-csv-konvertieren.md))\n-   `read_tsv()` - durch Tab getrennte Werte\n-   `read_delim()` - liest Dateien mit beliebigem Trennzeichen\n:::\n\n::: {.column width=\"50%\"}\n### readxl\n\n-   `read_excel()` - liest xls oder xlsx Dateien\n:::\n:::::\n\n## Daten aus CSV-Dateien lesen {.smaller}\n\n-   Import von [unbearbeiteten Rohdaten]{.highlight-yellow}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung <- read_csv(\"raw/KTZH_00001341_00002759_frage7a1.csv\")\n```\n:::\n\n\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,213 × 5\n   geschlecht alter     gemeinde_groesse bezirk_name antwort          \n   <chr>      <chr>     <chr>            <chr>       <chr>            \n 1 weiblich   55 bis 59 Winterthur       Winterthur  viel zu hoch     \n 2 männlich   70 bis 74 Winterthur       Winterthur  eher zu hoch     \n 3 weiblich   55 bis 59 10001 bis 20000  Hinwil      eher zu hoch     \n 4 weiblich   35 bis 39 20001 bis 50000  Hinwil      eher zu hoch     \n 5 weiblich   50 bis 54 5001 bis 10000   Meilen      eher zu hoch     \n 6 männlich   35 bis 39 <1000            Andelfingen gerade angemessen\n 7 weiblich   45 bis 49 10001 bis 20000  Pfäffikon   viel zu hoch     \n 8 männlich   30 bis 34 <1000            Winterthur  eher zu hoch     \n 9 weiblich   50 bis 54 5001 bis 10000   Winterthur  eher zu hoch     \n10 weiblich   80+       20001 bis 50000  Uster       eher zu hoch     \n# ℹ 1,203 more rows\n```\n\n\n:::\n:::\n\n\n\n## Daten als CSV-Datei schreiben {.smaller}\n\n-   transformiere Daten\n-   exportiere [verarbeitete, analysereife Daten]{.highlight-yellow}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nantwort_levels <- c(\"viel zu hoch\", \"eher zu hoch\", \"gerade angemessen\", \n                    \"eher zu tief\", \"viel zu tief\")\n\nbefragung_fct <- befragung |>\n    mutate(antwort = factor(antwort, levels = antwort_levels)) \n```\n:::\n\n\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_fct\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,213 × 5\n   geschlecht alter     gemeinde_groesse bezirk_name antwort          \n   <chr>      <chr>     <chr>            <chr>       <fct>            \n 1 weiblich   55 bis 59 Winterthur       Winterthur  viel zu hoch     \n 2 männlich   70 bis 74 Winterthur       Winterthur  eher zu hoch     \n 3 weiblich   55 bis 59 10001 bis 20000  Hinwil      eher zu hoch     \n 4 weiblich   35 bis 39 20001 bis 50000  Hinwil      eher zu hoch     \n 5 weiblich   50 bis 54 5001 bis 10000   Meilen      eher zu hoch     \n 6 männlich   35 bis 39 <1000            Andelfingen gerade angemessen\n 7 weiblich   45 bis 49 10001 bis 20000  Pfäffikon   viel zu hoch     \n 8 männlich   30 bis 34 <1000            Winterthur  eher zu hoch     \n 9 weiblich   50 bis 54 5001 bis 10000   Winterthur  eher zu hoch     \n10 weiblich   80+       20001 bis 50000  Uster       eher zu hoch     \n# ℹ 1,203 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(befragung_fct, \"daten/processed/ktzh-befragung-zufriedenheit.csv\")\n```\n:::\n\n\n\n## Analysefertige Daten einlesen {.smaller}\n\n-   Was ist aus unserem Faktor geworden?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_fct <- read_csv(\"daten/processed/ktzh-befragung-zufriedenheit.csv\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_fct\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,213 × 5\n   geschlecht alter     gemeinde_groesse bezirk_name antwort          \n   <chr>      <chr>     <chr>            <chr>       <chr>            \n 1 weiblich   55 bis 59 Winterthur       Winterthur  viel zu hoch     \n 2 männlich   70 bis 74 Winterthur       Winterthur  eher zu hoch     \n 3 weiblich   55 bis 59 10001 bis 20000  Hinwil      eher zu hoch     \n 4 weiblich   35 bis 39 20001 bis 50000  Hinwil      eher zu hoch     \n 5 weiblich   50 bis 54 5001 bis 10000   Meilen      eher zu hoch     \n 6 männlich   35 bis 39 <1000            Andelfingen gerade angemessen\n 7 weiblich   45 bis 49 10001 bis 20000  Pfäffikon   viel zu hoch     \n 8 männlich   30 bis 34 <1000            Winterthur  eher zu hoch     \n 9 weiblich   50 bis 54 5001 bis 10000   Winterthur  eher zu hoch     \n10 weiblich   80+       20001 bis 50000  Uster       eher zu hoch     \n# ℹ 1,203 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Wo ist der Faktor?\n\n-   Faktoren können in CSV Dateien nicht gespeichert werden\n-   Eine CSV Datei enthält lediglich Werte, getrennt durch ein Komma\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/md-04/raw-csv-github.png){width=731}\n:::\n:::\n\n\n\n## Wie speichern wir Faktoren? {.smaller}\n\n-   In R können Daten als `.rds` Datei gespeichert werden\n-   `.rds` Dateien speichern die Struktur der Daten\n-   Faktoren und andere Datenstrukturen bleiben erhalten\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(befragung_fct, \"folien/daten/processed/ktzh-befragung-zufriedenheit.rds\")\n```\n:::\n\n\n\n. . .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_rds <- read_rds(\"daten/processed/ktzh-befragung-zufriedenheit.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_rds\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,213 × 5\n   geschlecht alter     gemeinde_groesse bezirk_name antwort          \n   <chr>      <chr>     <chr>            <chr>       <fct>            \n 1 weiblich   55 bis 59 Winterthur       Winterthur  viel zu hoch     \n 2 männlich   70 bis 74 Winterthur       Winterthur  eher zu hoch     \n 3 weiblich   55 bis 59 10001 bis 20000  Hinwil      eher zu hoch     \n 4 weiblich   35 bis 39 20001 bis 50000  Hinwil      eher zu hoch     \n 5 weiblich   50 bis 54 5001 bis 10000   Meilen      eher zu hoch     \n 6 männlich   35 bis 39 <1000            Andelfingen gerade angemessen\n 7 weiblich   45 bis 49 10001 bis 20000  Pfäffikon   viel zu hoch     \n 8 männlich   30 bis 34 <1000            Winterthur  eher zu hoch     \n 9 weiblich   50 bis 54 5001 bis 10000   Winterthur  eher zu hoch     \n10 weiblich   80+       20001 bis 50000  Uster       eher zu hoch     \n# ℹ 1,203 more rows\n```\n\n\n:::\n:::\n\n\n\n## Daten zusammenfassen {.smaller}\n\n-   für eine Visualisierung oder Tabelle in einer veröffentlichten Arbeit\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_sum_alter <- befragung_rds |> \n    group_by(alter, antwort) |> \n    summarise(antwort_anzahl = n()) |> \n    mutate(antwort_prozent = antwort_anzahl / sum(antwort_anzahl) * 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbefragung_sum_alter\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 4\n# Groups:   alter [13]\n   alter     antwort           antwort_anzahl antwort_prozent\n   <chr>     <fct>                      <int>           <dbl>\n 1 18 bis 24 viel zu hoch                  12           18.2 \n 2 18 bis 24 eher zu hoch                  24           36.4 \n 3 18 bis 24 gerade angemessen             29           43.9 \n 4 18 bis 24 viel zu tief                   1            1.52\n 5 25 bis 29 viel zu hoch                  15           25   \n 6 25 bis 29 eher zu hoch                  20           33.3 \n 7 25 bis 29 gerade angemessen             23           38.3 \n 8 25 bis 29 eher zu tief                   2            3.33\n 9 30 bis 34 viel zu hoch                   9           14.1 \n10 30 bis 34 eher zu hoch                  25           39.1 \n# ℹ 42 more rows\n```\n\n\n:::\n:::\n\n\n\n## Daten visualisieren {.smaller}\n\n-   in einer Veröffentlichung\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = befragung_sum_alter,\n       mapping = aes(x = antwort_prozent, \n                     y = alter, \n                     fill = antwort)) +\n    geom_col() +\n    geom_text(aes(label = round(antwort_prozent, 0)),  \n              position = position_stack(vjust = 0.5)) +\n    scale_fill_colorblind() \n```\n\n::: {.cell-output-display}\n![](md-04-daten-management_files/figure-revealjs/unnamed-chunk-28-1.png){width=576}\n:::\n:::\n\n\n\n## Daten exportieren\n\n-   [Daten, die einer Veröffentlichung zugrunde liegen]{.highlight-yellow}\n-   als CSV-Datei\n-   erhöht die Wiederverwendbarkeit\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(befragung_sum_alter, \n          \"daten/final/ktzh-befragung-zufriedenheit-sum.csv\")\n```\n:::\n\n\n\n## Daten Management {.smaller}\n\n| Begriff | Ordnername | Erklärung | Dateiformat |\n|------------------|------------------|------------------|------------------|\n| unbearbeitete Rohdaten | data/raw | Daten, die nicht bearbeitet wurden und in ihrer [ursprünglichen Form und Datei bleiben]{.highlight-yellow} | often XLSX, also CSV, JSON, and others |\n\n: Beispiele für Begriffe, die bei der Datenverwaltung verwendet werden. {.striped .hover tbl-colwidths=\"\\[20, 10, 50, 20\\]\"}\n\n## Daten Management {.smaller}\n\n| Begriff | Ordnername | Erklärung | Dateiformat |\n|------------------|------------------|------------------|------------------|\n| unbearbeitete Rohdaten | data/raw | Daten, die nicht bearbeitet wurden und in ihrer [ursprünglichen Form und Datei bleiben]{.highlight-yellow} | often XLSX, also CSV, JSON, and others |\n| verarbeitete, analysefähige Daten | data/processed | Daten, die zur Vorbereitung einer Analyse verarbeitet werden und in ihrer [neuen Form als neue Datei]{.highlight-yellow} gespeichert werden | CSV, RDS, JSON |\n\n: Beispiele für Begriffe, die bei der Datenverwaltung verwendet werden. {.striped .hover tbl-colwidths=\"\\[20, 10, 50, 20\\]\"}\n\n## Daten Management {.smaller}\n\n| Begriff | Ordnername | Erklärung | Dateiformat |\n|------------------|------------------|------------------|------------------|\n| unbearbeitete Rohdaten | data/raw | Daten, die nicht bearbeitet wurden und in ihrer [ursprünglichen Form und Datei bleiben]{.highlight-yellow} | often XLSX, also CSV, JSON, and others |\n| verarbeitete, analysefähige Daten | data/processed | Daten, die zur Vorbereitung einer Analyse verarbeitet werden und in ihrer [neuen Form als neue Datei]{.highlight-yellow} gespeichert werden | CSV, RDS, JSON |\n| Daten, die einer Veröffentlichung zugrunde liegen | data/final | Daten, die das [Ergebnis einer Analyse]{.highlight-yellow} sind (z. B. deskriptive Statistik oder Datenvisualisierung) und in einem Bericht angezeigt werden, dann aber auch in ihrer neuen Form als neue Datei exportiert werden | CSV |\n\n: Beispiele für Begriffe, die bei der Datenverwaltung verwendet werden. {.striped .hover tbl-colwidths=\"\\[20, 10, 50, 20\\]\"}\n\n## Pause machen\n\n[Bitte steh auf und beweg dich.]{.highlight-yellow} Lasst eure E-Mails in Frieden ruhen.\n\n![](img/md-04/pixel-art-tree.png){width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_3b2b013e\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n::: footer\nBild erzeugt mit [DALL-E 3 by OpenAI](https://openai.com/blog/dall-e/)\n:::\n\n## Ihr seid dran: 03-daten-import-ihr.qmd\n\n::: task\n1.  Öffne [posit.cloud](https://posit.cloud) in deinem Browser (verwende dein Lesezeichen).\n2.  Öffne den rstatszh-k010 Arbeitsbereich (Workspace) für den Kurs.\n3.  Klicke auf [Continue]{.highlight-yellow} neben [md-04-uebungen]{.highlight-yellow}.\n4.  Suche im Dateimanager im Fenster unten rechts die Datei `03-daten-import-ihr.qmd` und klicke darauf, um sie im Fenster oben links zu öffnen.\n5.  Folge den Anweisungen in der Datei.\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_1594548d\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">25</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## Zeitpuffer: Modul 4 {.smaller}\n\n\n\n::: {.cell}\n1. Die Lernenden können Daten aus Dateien im CSV und XLSX-Format importieren, die sich in Unterverzeichnissen des Stammverzeichnisses, und auf GitHub, befinden.\n2. Die Lernenden können den Unterschied zwischen drei Arten von Daten erörten: (1) unverarbeitete Rohdaten; (2) verarbeitete, analysefähige Daten, und (3) Daten, die einer Veröffentlichung zugrunde liegen.\n3. Die Lernenden können die Anwendung der Git Befehle clone, commit, push beschreiben.\n4. Die Lernenden können die Begriffe local und remote Repository unterscheiden.\n:::\n\n\n\n::: {.hand-purple-large style=\"text-align: center;\"}\nWelche Konzepte kann ich nochmals erklären?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_9af999fa\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# Zusatzaufgaben Modul 4 {background-color=\"#4C326A\"}\n\n## Modul 4 Dokumentation\n\n::: learn-more\n[rstatszh-k010.github.io/website/module/md-04.html](https://rstatszh-k010.github.io/website/module/md-04.html)\n\n<iframe src=\"https://rstatszh-k010.github.io/website/module/md-04.html\" width=\"100%\" height=\"500\" style=\"border:2px solid #123233;\" title=\"Module 4 Dokumentation\">\n\n</iframe>\n:::\n\n## Zusatzaufgaben Abgabedatum\n\n-   Abgabedatum: [Montag, 21. Oktober]{.highlight-yellow}\n-   Korrektur- und Feedbackphase bis zu: Donnerstag, 24. Oktober\n\n# Danke {background-color=\"#4C326A\"}\n\n## Danke! 🌻\n\nFolien erstellt mit revealjs und Quarto: https://quarto.org/docs/presentations/revealjs/ Access slides als [PDF auf GitHub](https://github.com/rstatszh-k010/website/raw/main/folien/md-04-daten-management.pdf)\n\nAlle Materialien sind lizenziert unter [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/).\n",
    "supporting": [
      "md-04-daten-management_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}