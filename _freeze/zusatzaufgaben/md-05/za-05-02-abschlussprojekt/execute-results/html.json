{
  "hash": "05694f5c87dbf34a21b0a0749f6fefbf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Abschlussprojekt\"\nsubtitle: \"Daten auswählen\"\nexecute:\n    message: false\n    warning: false\n    eval: false\n---\n\n\n\n\nAm Ende des Kurses steht ein Abschlussprojekt in welchem ihr die Möglichkeit bekommt mit einem Datensatz eurer Wahl zu arbeiten und die im Kurs erlernten Methoden und Techniken anzuwenden und zu vertiefen. Die Auswahl des Datenprojekts ist frei, es sollte jedoch ein Datensatz sein, welcher öffentlich geteilt werden kann. Dies bedeutet nicht zwingend, dass der Datensatz als OGD Ressource im Datenkatalog verfügbar sein muss, aber es sollte die Möglichkeit bestehen, dass dieser über GitHub geteilt werden kann. \n\nDazu gibt es bei der Auswahl des Datensatzes folgendes zu beachten:\n\n## Nicht schützenswerte Daten\n\nAuf Grundlage des [Gesetzes über die Information und den Datenschutz (IDG)](http://www.zhlex.zh.ch/Erlass.html?Open&Ordnr=170.4) dürfen Verwaltungseinheiten und Organe des Kantons Zürich nicht schützenswerte Daten, die unter ihrer Hoheit stehen, als offene Behördendaten publizieren.\n\n'Nicht schützenswert' bedeutet, dass die bereitgestellten Daten:\n\n- nicht die Privatsphäre verletzen\n- nicht sicherheitskritisch sind und\n- keinen Drittrechten (wie zum Beispiel Copyrights) unterliegen.\n\nInfo entnommen aus: <https://www.zh.ch/de/politik-staat/opendata/leitlinien.html#-932898780>\n\n## Daten auswählen\n\nFolgende Fragen stellen sich:\n\n1. Habe ich Daten welche die oben genannten Kriterien erfüllen? \n\n2. Habe ich ein bestimmtes Ziel für das Arbeiten mit diesen Daten?\n\nFalls keine \"nicht schützenswerten\" Daten zur Verfügung stehen, kann ein offener Datensatz genutzt werden. Dazu gibt es den Datenkatalog des Kantons Zürich und andere offene Datenquellen, welche in [Zusatzaufgabe 1: Ressourcen für OGD im Kanton Zürich](za-05-01-ktzh-ogd.qmd) beschrieben sind. \n\n## Daten Struktur & Leitlinien\n\nDie Daten müssen nicht bereits in den vorgegeben Kriterien der [Leitlinien des Kantons Zürich für einfach nutzbare Behördendaten](https://github.com/openZH/ogd-handbook/blob/main/publikationsleitlinien.md) vorliegen. Das Abschlussprojekt selbst könnte auch die Aufbereitung beinhalten und somit die Daten in ein Format bringen, welches den Leitlinien entspricht. \n\n# Arbeitsschritte\n\n## Schritt 1: Erstelle ein neues Repository auf GitHub & clone es in die Posit Cloud\n\n1. Öffne die GitHub Organisation für den Kurs <https://github.com/rstatszh-k010>\n\n2. Rechts neben dem Feld [\"Find a repository\"]{.highlight-yellow} klicke auf den grünen [\"New\"]{.highlight-yellow} Button.\n\n3. Im Feld [\"Repository name\"]{.highlight-yellow} schreibe `projekt-USERNAME`. [Ersetze USERNAME durch deinen GitHub Benutzernamen]{.highlight-yellow}. Vermeide Leerzeichen.\n\n4. Skrolle auf der gleichen Seite nach unten und klicke auf [\"Create repository\"]{.highlight-yellow}.\n\n5. Im Feld [\"Quick setup\"]{.highlight-yellow} klicke auf das Clipboard neben der HTTPs URL.\n\n6. Öffne den rstatszh-k010 Arbeitsbereich (Workspace) auf Posit Cloud <https://posit.cloud/spaces/591694/content/all?sort=name_asc>\n\n7. Klicke auf \"New Project\" > \"New Project from Git Repository\"\n\n8. Füge die HTTPS-URL von GitHub in das Feld \"URL of your Git Repository\" ein. [**Beachte:**]{.highlight-yellow} Stelle sicher, dass die Box unter Packages ein Häkchen gesetzt hat.\n\n9. Warte, bis das Projekt bereitgestellt wurde.\n\n## Schritt 2: Erstelle neue Ordner\n\n1. Im Datei Manager im Fenster unten rechts, klicke auf \"Folder\" um einen neuen Ordner zu erstellen.\n\n2. Benenne den Ordner `daten`.\n\n3. Klicke auf den Ordner `daten` im Datei Manager im Fenster unten rechts.\n\n4. Erstelle einen weiteren Ordner `raw` im Ordner `daten`.\n\n5. Klicke auf den Ordner `raw` im Datei Manager im Fenster unten rechts.\n\n## Schritt 3: Daten hochladen\n\n1. Verwende den Datei Manager im unteren rechten Fenster, um die identifizierten Daten aus Aufgabe 1 in den `raw` Ordner hochzuladen. Für detaillierte Schritte, siehe [Zusatzaufgabe 2 aus Modul 3](../md-03/za-03-02-github-repo-erstellen.qmd). \n\n## Schritt 4: Quarto Datei erstellen\n\n1. Navigiere zurück zum Hauptverzeichnis deines Projekts, indem du auf den blauen R-Würfel klickst.\n\n![](images/01-file-manager-hauptverzeichnis.png){width=80%}\n2. Erstelle einen neuen Ordner `docs` im Hauptverzeichnis deines Projekts.\n\n3. Klicke auf den Ordner `docs`.\n\n4. Erstelle ein neues Quarto-Dokument und speichere es als `index.qmd` im `docs`-Ordner.\n\n![](images/02-docs-index.png){width=80%}\n\n5. Lösche den Inhalt des Quarto-Dokuments bis auf die YAML Metadaten zu Beginn des Dokuments.\n\n6. Erstelle die folgenden Abschnitte in deinem Quarto-Dokument:\n\n- Einleitung (formatiert als Heading 1)\n- Daten (formatiert als Heading 2)\n- Analyseziele (formatiert als Heading 2)\n- Daten Aufbereitung (formatiert als Heading 1)\n- Daten Visualisierung (formatiert als Heading 1)\n\n7. In der Einleitung, beschreibe kurz das Projekt, die Daten, und deine Analyseziele. \n\n## Schritt 5: R-Pakete laden und Daten importieren\n\n1. Vor der Einleitung, füge einen Code-Block hinzu und schreibe `library(tidyverse)` um die R-Pakete zu laden, welche du in diesem Kurs gelernt hast.\n\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(tidyverse)\n```\n````\n:::\n\n\n\n\n2. Importiere deine Daten, indem du den folgenden Code in einem weiteren Code-Block schreibst (in diesem Beispiel verwenden wir eine CSV-Datei):\n\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nread_csv(here::here(\"daten/raw/your-file-name.csv\"))\n```\n````\n:::\n\n\n\n\n::: callout-tip\n## Das R-Paket `here`\nWir empfehlen das R-Paket `here` zu verwenden, um auf Dateien in deinem Projekt zu verweisen. Das `here` R-Paket hilft dabei, den richtigen Dateipfad zu deinen Daten zu finden. Wir werden Dateipfade und das Paket selbst in einem anderen Modul besprechen.\n:::\n\n## Schritt 6: Übertrage deine Änderungen auf GitHub\n\n1. Überprüfe ob dein Projekt den gleichen Aufbau hat wie das Projekt von Rainbow Train: <https://github.com/rstatszh-k010/projekt-rainbow-train>\n\n2. Falls der Aufbau nicht übereinstimmt, nehme nochmals Veränderungen vor.\n\n3. Sobald du den Aufbau abgeschlossen hast, navigiere zum Git-Bereich im Fenster oben rechts.\n\n4. Aktiviere die Kontrollkästchen neben allen Dateien, um sie für den Commit vorzubereiten.\n\n5. Klicke auf die Schaltfläche \"Commit\".\n\n6. Gib eine Commit-Nachricht in das Feld \"Commit Message\" ein (z.B. Projekt aufsetzen).\n\n7. Klicke auf die Schaltfläche \"Commit\". Das Fenster, welches sich daraufhin öffnet kann geschlossen werden.\n\n8. Klicke auf die Schaltfläche \"Push\".\n\n9. Gib deinen GitHub-Benutzernamen im Feld Username an. \n\n10. Gib [deinen GitHub Personal Access Token (PAT)]{.highlight-yellow} im Feld [\"Password\"]{.highlight-yellow} ein.\n\n11. Das Fenster kann geschlossen werden.\n\n## Schritt 7: Eröffne ein Issue auf GitHub\n\n1. Öffne [github.com](https://github.com/) in deinem Browser.\n\n2. Navigiere zur GitHub-Organisation für den Kurs: [github.com/rstatszh-k010](https://github.com/rstatszh-k010)\n\n3. Finde das Repository [projekt-USERNAME]{.highlight-yellow}, das mit deinem GitHub-Benutzernamen endet.\n\n4. Klicke auf die Schaltfläche \"Issues\".\n\n5. Klicke auf die grüne Schaltfläche \"New issue\".\n\n6. Schreibe in das Feld \"Title\": \"Daten für das Abschlussprojekt ausgewählt\".\n\n7. Markiere im Feld \"Leave a comment\" den Kursleiter mit @larnsce und hinterlasse mir ein Kommentar, falls du möchtest.\n",
    "supporting": [
      "za-05-02-abschlussprojekt_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}